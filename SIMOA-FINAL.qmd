---
title: "SIMOA FINAL"
author: "PO Couture"
format: html
editor: visual
---

## SIMOA FINAL

*** Planned Analyses ***
All statistical analyses will be conducted using multiply imputed data to account for missingness across variables. Multiple imputation is used to reduce bias and improve statistical power by generating plausible values based on the observed data distribution. The imputation model includes all variables of interest, consistent with current best practices for handling missing data in psychological and health research.

Group Comparisons
To examine whether older adults who discontinued their use of benzodiazepine receptor agonists (BZRA) differ from those who continued use, a series of independent samples t-tests will be conducted. These analyses will compare the two groups on a range of psychological and personality variables, including:

BFI-10 (Big Five Inventory - 10-item short form),

SURPS (Substance Use Risk Profile Scale),

PHQ-2 (Patient Health Questionnaire – depression screener),

OSSS-3 (Oslo Social Support Scale),

DBAS-16 (Dysfunctional Beliefs and Attitudes about Sleep),

CISS-21 (Coping Inventory for Stressful Situations).

Additional between-group comparisons will be conducted on demographic and health-related variables (e.g., age, gender, sleep quality, comorbidities) to identify any systematic differences that may be associated with BZRA cessation status.

*** Predictive Modelling ***
To identify the most important variables associated with successful BZRA cessation, a Random Forest classification model will be employed. Random Forest is a non-parametric ensemble machine learning method that handles complex interactions and non-linear relationships, and is robust to multicollinearity and overfitting.

The Random Forest model will be trained using all personality, psychological, demographic, and health-related variables as predictors, with BZRA cessation (yes/no) as the outcome. Variable importance scores will be used to rank predictors based on their contribution to classification accuracy.

*** Model Confirmation ***
To validate the findings from the Random Forest model, a logistic regression analysis will be conducted using the top predictors identified by the Random Forest. This traditional regression model will allow for the estimation of effect sizes (odds ratios) and the statistical significance of each variable’s unique contribution to BZRA cessation. Confidence intervals and p-values will be reported, and model diagnostics will be used to assess model fit.

Together, this multi-step analytic strategy aims to both explore and confirm key predictors of BZRA discontinuation among older adults, leveraging the strengths of both machine learning and traditional inferential statistics.

## Data Loading, Screening and Packages
In this section I am loading all the necessary packages for my analysis and loading in the data.
```{r}
#| label: Data Loading and Packages

# Installing and Loading Packages
install.packages("MissMech")

library(dplyr)
library(ggplot2)
library(mice)
library(MissMech)
library(naniar)
library(readr)
library(stringr)
library(tidyverse)
library(VIM)

# Data Loading
SIMOA_Report <- read_csv("SIMOA Report.csv")
View(SIMOA_Report)

```

Below I am creating a new object containing only the participants we can confirm are >= 65 and are using a BZRA by answering which specific BZRA they are using. This is to ensure they are not using other medications that may have sedative effects such as antihistamines or SSRI's.
```{r}
#| label: Creating new object 

Dataset <- SIMOA_Report %>%
  # Apply filtering based on age_cat and age
  filter(
    age_cat == 1 | (age_cat == 0 & age >= 65)
  ) %>%
  # Apply filtering to keep only rows where any of c_sp___1 to c_sp___14 == 1
  filter(
    rowSums(select(., starts_with("c_sp___"))[, 1:14] == 1, na.rm = TRUE) > 0
  )
```

## Calculating Subscale Scores
This section will calculate all the subscale scores for BFI-10, SURPS, DBAS-16, and CISS-21
```{r}
#| label: BFI-10 Subscale

# First, let's create a working copy
data_processed <- Dataset
# ============================================================================
# STEP 1: REVERSE CODE PERSONALITY ITEMS (1-5 scale)
# ============================================================================
# Items to reverse: reserved, find_fault, lazy, relaxed, few_interests
# Formula: reversed_score = 6 - original_score

data_processed <- data_processed %>%
  mutate(
    reserved_rev = 6 - reserved,
    find_fault_rev = 6 - find_fault,
    lazy_rev = 6 - lazy,
    relaxed_rev = 6 - relaxed,
    few_interests_rev = 6 - few_interests
  )

# ============================================================================
# STEP 2: CREATE PERSONALITY TOTAL SCORES
# ============================================================================
data_processed <- data_processed %>%
  mutate(
    # Extraversion: reserved (reversed) + outgoing
    Extraversion = reserved_rev + outgoing,
    
    # Agreeableness: trusting + find_fault (reversed)
    Agreeableness = trusting + find_fault_rev,
    
    # Conscientiousness: lazy (reversed) + thorough
    Conscientiousness = lazy_rev + thorough,
    
    # Neuroticism: relaxed (reversed) + nervous
    Neuroticism = relaxed_rev + nervous,
    
    # Openness: few_interests (reversed) + imagination
    Openness = few_interests_rev + imagination
  )

```

```{r}
#| label: DBAS-16 Subscale

# ============================================================================
# STEP 3: CREATE DBAS TOTAL SCORES (0-10 scale)
# ============================================================================
data_processed <- data_processed %>%
  mutate(
    # Consequences: dbas_5, dbas_7, dbas_9, dbas_12, dbas_16
    DBAS_Consequences = dbas_5 + dbas_7 + dbas_9 + dbas_12 + dbas_16,
    
    # Worry/Helplessness: dbas_3, dbas_4, dbas_8, dbas_10, dbas_11, dbas_14
    DBAS_Worry_Helplessness = dbas_3 + dbas_4 + dbas_8 + dbas_10 + dbas_11 + dbas_14,
    
    # Expectations: dbas_1, dbas_2
    DBAS_Expectations = dbas1 + dbas_2,
    
    # Medications: dbas_6, dbas_13, dbas_15
    DBAS_Medications = dbas_6 + dbas_13 + dbas_15
  )
```

```{r}
#| label: SURPS Subscale

# ============================================================================
# STEP 4: CREATE SURPS TOTAL SCORES (1-4 scale)
# ============================================================================
# First, reverse code SURPS Hopelessness items (all except surps17)
# Formula for 1-4 scale: reversed_score = 5 - original_score
data_processed <- data_processed %>%
  mutate(
    surps1_rev = 5 - surps1,
    surps4_rev = 5 - surps4,
    surps7_rev = 5 - surps7,
    surps13_rev = 5 - surps13,
    surps20_rev = 5 - surps20,
    surps23_rev = 5 - surps23
    # Note: surps17 is NOT reversed
  )

# Create SURPS total scores
data_processed <- data_processed %>%
  mutate(
    # Impulsivity: surps2, surps5, surps11, surps15, surps22
    SURPS_Impulsivity = surps2 + surps5 + surps11 + surps15 + surps22,
    
    # Sensation Seeking: surps3, surps6, surps9, surps12, surps16, surps19
    SURPS_Sensation_Seeking = surps3 + surps6 + surps9 + surps12 + surps16 + surps19,
    
    # Hopelessness: surps1(rev), surps4(rev), surps7(rev), surps13(rev), surps17, surps20(rev), surps23(rev)
    SURPS_Hopelessness = surps1_rev + surps4_rev + surps7_rev + surps13_rev + surps17 + surps20_rev + surps23_rev,
    
    # Anxiety Sensitivity: surps8, surps10, surps14, surps18, surps21
    SURPS_Anxiety_Sensitivity = surps8 + surps10 + surps14 + surps18 + surps21
  )
```

```{r}
#| label: CISS-21 Subscales

# ============================================================================
# STEP 5: CREATE CISS-21 TOTAL SCORES (1-5 scale)
# ============================================================================
data_processed <- data_processed %>%
  mutate(
    # Avoidance Style: ciss1, ciss4, ciss7, ciss9, ciss15, ciss18, ciss21
    CISS_Avoidance_Style = ciss1 + ciss4 + ciss7 + ciss9 + ciss15 + ciss18 + ciss21,
    
    # Task Style: ciss2, ciss6, ciss8, ciss11, ciss13, ciss16, ciss19
    CISS_Task_Style = ciss2 + ciss6 + ciss8 + ciss11 + ciss13 + ciss16 + ciss19,
    
    # Emotional Style: ciss3, ciss5, ciss10, ciss12, ciss14, ciss17, ciss20
    CISS_Emotional_Style = ciss3 + ciss5 + ciss10 + ciss12 + ciss14 + ciss17 + ciss20
  )
```

```{r}
#| label: Final Dataset
# ============================================================================
# STEP 6: CREATE FINAL DATASET WITH TOTAL SCORES AND DEMOGRAPHIC VARIABLES
# ============================================================================
# Select all total scores plus additional variables and demographics for imputation (27 variables total)
final_dataset <- data_processed %>%
  select(
    # DBAS scales (4 variables)
    DBAS_Consequences,
    DBAS_Worry_Helplessness,
    DBAS_Expectations,
    DBAS_Medications,
    # Personality scales (5 variables)
    Extraversion,
    Agreeableness,
    Conscientiousness,
    Neuroticism,
    Openness,
    # SURPS scales (4 variables)
    SURPS_Impulsivity,
    SURPS_Sensation_Seeking,
    SURPS_Hopelessness,
    SURPS_Anxiety_Sensitivity,
    # CISS scales (3 variables)
    CISS_Avoidance_Style,
    CISS_Task_Style,
    CISS_Emotional_Style,
    # Additional variables (2 variables)
    osss_3_score,
    phq2_score,
    # Demographic variables (9 variables)
    age,
    sex,
    gender,
    prov_terr,
    education,
    employment,
    driving_freq,
    income
  )
```

```{r}
#| label: Checking Calculations
# ============================================================================
# STEP 7: VERIFICATION - CHECK YOUR CALCULATIONS
# ============================================================================
# Display summary statistics to verify calculations
cat("=== VERIFICATION: Summary of Final Variables ===\n")
summary(final_dataset)

# Check for any missing values before MICE
cat("\n=== Missing Values Count ===\n")
sapply(final_dataset, function(x) sum(is.na(x)))

# Check range of scores to ensure reverse coding worked
cat("\n=== Score Ranges (to verify calculations) ===\n")
cat("Big Five Personality (should be 2-10):\n")
cat("  Extraversion range:", range(final_dataset$Extraversion, na.rm = TRUE), "\n")
cat("  Agreeableness range:", range(final_dataset$Agreeableness, na.rm = TRUE), "\n")
cat("  Conscientiousness range:", range(final_dataset$Conscientiousness, na.rm = TRUE), "\n")
cat("  Neuroticism range:", range(final_dataset$Neuroticism, na.rm = TRUE), "\n")
cat("  Openness range:", range(final_dataset$Openness, na.rm = TRUE), "\n")

cat("\nSURPS scales:\n")
cat("  Impulsivity range (5 items, 1-4 scale, should be 5-20):", range(final_dataset$SURPS_Impulsivity, na.rm = TRUE), "\n")
cat("  Sensation Seeking range (6 items, 1-4 scale, should be 6-24):", range(final_dataset$SURPS_Sensation_Seeking, na.rm = TRUE), "\n")
cat("  Hopelessness range (7 items, 1-4 scale, should be 7-28):", range(final_dataset$SURPS_Hopelessness, na.rm = TRUE), "\n")
cat("  Anxiety Sensitivity range (5 items, 1-4 scale, should be 5-20):", range(final_dataset$SURPS_Anxiety_Sensitivity, na.rm = TRUE), "\n")

cat("\nCISS scales:\n")
cat("  Avoidance Style range (7 items, 1-5 scale, should be 7-35):", range(final_dataset$CISS_Avoidance_Style, na.rm = TRUE), "\n")
cat("  Task Style range (7 items, 1-5 scale, should be 7-35):", range(final_dataset$CISS_Task_Style, na.rm = TRUE), "\n")
cat("  Emotional Style range (7 items, 1-5 scale, should be 7-35):", range(final_dataset$CISS_Emotional_Style, na.rm = TRUE), "\n")
```

## Multiple Imputation
```{r}
#| label: Multiple Imputation
# ============================================================================
# STEP 8: APPLY MICE IMPUTATION
# ============================================================================
# Set seed for reproducibility
set.seed(123)

# Check data types and prepare for MICE
# MICE will automatically detect categorical vs continuous variables
# But let's ensure proper factor coding for categorical variables
cat("=== PREPARING DATA FOR MICE IMPUTATION ===\n")
cat("Checking data types...\n")

# Convert categorical variables to factors if they aren't already
categorical_vars <- c("sex", "gender", "prov_terr", "education", "employment", "driving_freq", "income")

for(var in categorical_vars) {
  if(var %in% names(final_dataset)) {
    if(!is.factor(final_dataset[[var]])) {
      final_dataset[[var]] <- as.factor(final_dataset[[var]])
      cat(paste("Converted", var, "to factor\n"))
    }
  }
}

# Display data types
str(final_dataset)

# Apply MICE imputation
cat("\n=== RUNNING MICE IMPUTATION ===\n")
cat("This may take a moment with 27 variables...\n")

mice_result <- mice(final_dataset, m = 5, method = 'pmm', printFlag = FALSE)

# Get the completed dataset (using the first imputation)
final_dataset_imputed <- complete(mice_result, 1)

# Display summary of imputed dataset
cat("\n=== FINAL IMPUTED DATASET SUMMARY ===\n")
summary(final_dataset_imputed)

# Check that there are no missing values after imputation
cat("\n=== Missing Values After MICE ===\n")
sapply(final_dataset_imputed, function(x) sum(is.na(x)))

cat("\n=== PROCESS COMPLETE ===\n")
cat("Your final dataset 'final_dataset_imputed' contains 27 variables and is ready for analysis.\n")
cat("Variables included:\n")
cat("  - 4 DBAS scales\n")
cat("  - 5 Big Five personality dimensions\n")
cat("  - 4 SURPS scales\n")
cat("  - 3 CISS coping styles\n")
cat("  - 2 additional variables (osss_3_score, phq2_score)\n")
cat("  - 9 demographic variables (age, sex, gender, prov_terr, education, employment, driving_freq, income)\n")
cat("\nIMPORTANT NOTES:\n")
cat("1. You now have 27 variables total, which is well above the 10-15 recommendation.\n")
cat("2. For your random forest model, you'll need to select the most important variables.\n")
cat("3. Consider creating separate models or using variable selection techniques.\n")
cat("4. The demographic variables will improve imputation quality but may not all be needed in your final model.\n")

# Optional: Create a subset with just the main scales for modeling
cat("\n=== CREATING SUBSET FOR MODELING ===\n")
modeling_dataset <- final_dataset_imputed %>%
  select(
    # Main scales only (16 variables)
    DBAS_Consequences, DBAS_Worry_Helplessness, DBAS_Expectations, DBAS_Medications,
    Extraversion, Agreeableness, Conscientiousness, Neuroticism, Openness,
    SURPS_Impulsivity, SURPS_Sensation_Seeking, SURPS_Hopelessness, SURPS_Anxiety_Sensitivity,
    CISS_Avoidance_Style, CISS_Task_Style, CISS_Emotional_Style
  )

cat("Created 'modeling_dataset' with 16 main psychological scales (no demographics).\n")
cat("This may be more appropriate for your random forest model.\n")
```








